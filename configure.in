AC_INIT([MomentNvr], [0.1])

PKG_CHECK_MODULES(THIS, [libmoment-1.0 >= 0.1])
AC_SUBST(THIS_CFLAGS)
AC_SUBST(THIS_LIBS)

AM_INIT_AUTOMAKE([1.7 gnu nostdinc])

AC_PROG_CC
AC_PROG_CXX
AC_LIBTOOL_WIN32_DLL
AC_PROG_LIBTOOL

AC_LANG_CPLUSPLUS

case "$host" in
  *-*-mingw*|*-*-cygwin*)
    platform_win32=yes
    ;;
  *)
    platform_win32=no
    ;;
esac
AM_CONDITIONAL(PLATFORM_WIN32, test x$platform_win32 = xyes)

AC_ARG_ENABLE([inc],
	      AC_HELP_STRING([--enable-inc],
			     [Enable extras]),
	      [enable_inc=$enable_inc],
	      [enable_inc="no"])
AM_CONDITIONAL([MOMENT_NVR_INC], test "x$enable_inc" = "xyes")
if test "x$enable_inc" = "xyes"; then
    AC_DEFINE([MOMENT_NVR_INC], [1], [ ])
fi


tmp_cxxflags="$CXXFLAGS"

CXXFLAGS="$CXXFLAGS -Wextra"
AC_MSG_CHECKING([whether CXX supports -Wextra])
AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM([])],
    [AC_MSG_RESULT([yes])]
        [AM_CFLAGS="$AM_CFLAGS -Wextra"]
        [AM_CXXFLAGS="$AM_CXXFLAGS -Wextra"],
    [AC_MSG_RESULT([no])]
        [AM_CFLAGS="$AM_CFLAGS"]
        [AM_CXXFLAGS="$AM_CXXFLAGS"])

CXXFLAGS="$tmp_cxxflags -std=gnu++11"
AC_MSG_CHECKING([whether CXX supports -std=gnu++11])
AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM([])],
    [AC_MSG_RESULT([yes])]
        [AM_CXXFLAGS="$AM_CXXFLAGS -std=gnu++11"],
    [AC_MSG_RESULT([no])]
        AC_MSG_CHECKING([whether CXX supports -std=c++11])
        CXXFLAGS="$tmp_cxxflags -std=c++11"
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([])],
                          [AC_MSG_RESULT([yes])]
                              [AM_CXXFLAGS="$AM_CFLAGS -std=c++11"],
                          [AC_MSG_RESULT([no])]
                              [AM_CXXFLAGS="$AM_CFLAGS -std=gnu++0x"]))

CXXFLAGS="$tmp_cxxflags"
AC_SUBST([AM_CFLAGS])
AC_SUBST([AM_CXXFLAGS])


AC_CONFIG_FILES([Makefile
		 moment-nvr/Makefile])
AC_OUTPUT

